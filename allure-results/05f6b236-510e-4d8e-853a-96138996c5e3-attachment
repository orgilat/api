# Test info

- Name: בדיקה פddלואו: מעבר לניהול הסקר ואז למסך עונות
- Location: C:\Users\User\Documents\k6try\tests\api.spec.ts:34:6

# Error details

```
Error: expect(locator).toBeVisible()

Locator: locator('input[value="שאלות חובה לסוציומטרי"]')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 190000ms
  - waiting for locator('input[value="שאלות חובה לסוציומטרי"]')

    at FlowPage.six (C:\Users\User\Documents\k6try\pages\FlowPage.ts:195:26)
    at C:\Users\User\Documents\k6try\tests\api.spec.ts:45:7
    at C:\Users\User\Documents\k6try\tests\api.spec.ts:40:5
```

# Test source

```ts
   95 |         
   96 |            this.calculate = page.getByRole('button', { name: 'חשב פוטנציאל מחדש' });
   97 |     this.show = page.getByRole('button', { name: 'הצג פוטנציאל' })
   98 |     this.show1 = page.getByRole('button', { name: 'הצג פוטנציאל' })  
   99 |  
  100 |     this.f1 = page.getByRole('button', { name: 'Select' }).nth(1)
  101 |     this.f2= page.getByText('לא', { exact: true })
  102 |     this.f4= page.getByText('close')
  103 |     this.all = page.locator('//input[@type="button"]');
  104 |     this.must = page.locator(' input[value="שאלות חובה לסוציומטרי"]');
  105 |    
  106 |   }
  107 |
  108 |   async goto() {
  109 |     await this.page.goto('https://www.survey.co.il/pms/MMDANEW/default.asp');
  110 |   }
  111 |
  112 |   async login(username: string, password: string) {
  113 |     await this.loginInput.fill(username);
  114 |     await this.passwordInput.fill(password);
  115 |     await this.submitButton.click();
  116 |     await this.page.waitForTimeout(1001);
  117 |   }
  118 |
  119 |   async goToSociometricManagement() {
  120 |     await this.surveyAdminLink.hover();
  121 |     await this.sociometricLink.click();
  122 |    
  123 |
  124 |   }
  125 |   async four() {
  126 |     await this.modelingButton.scrollIntoViewIfNeeded()
  127 |     await this.modelingButton.click();
  128 |     await this.modelingButton1.click();
  129 |     await this.list.locator('div.ss-option').nth(1).click();
  130 |    await this.list1.hover()
  131 |    await this.list2.click()
  132 |    
  133 |   
  134 |   }
  135 |   async five() {
  136 |     await this.eventManagementButton.click();
  137 |     await this.createNewEventButton.click();
  138 |     await this.eventNameInput.waitFor({ state: 'visible' });
  139 |     await this.eventNameInput.click({ force: true });
  140 |     await this.page.waitForTimeout(200); // זמן קטן לייצוב
  141 |     await this.eventNameInput.fill(''); // לנקות את השדה
  142 |     await this.page.waitForTimeout(200); // עוד זמן קטן
  143 |     await this.page.keyboard.type('מרינה 2025', { delay: 150 });
  144 |     await expect(this.eventNameInput).toHaveValue('מרינה 2025', { timeout: 5000 });
  145 |
  146 |
  147 |     await expect(this.eventNameInput).toHaveValue('מרינה 2025', { timeout: 5000 });
  148 |
  149 |
  150 |     await this.seasonDropdown.click();
  151 |     await this.seasonOption.click();
  152 |     // הוספת בחירת עונה כאן אם צריך
  153 |
  154 |     // בחירת תאריך התחלה
  155 |     await this.startDateButton.click();
  156 |     await this.page.keyboard.press('Enter');   // בחירת תאריך סיום
  157 |     await this.endDateButton.click();
  158 |     await this.page.keyboard.press('Enter');
  159 |     await this.recruit.click();
  160 |     await this.recruitOption.click();
  161 |     logger.info('we came to the end');
  162 |     await this.mateS.click();
  163 |     logger.info('worked');
  164 |     await this.mateC.click();
  165 |     await this.pikud1.click();
  166 |     logger.info('פיקוד אחד נלחץ');
  167 |     await this.page.waitForTimeout(2000)
  168 |     await this.page.locator('div:nth-child(18) > .dx-treeview-with-search > .dx-scrollable > .dx-scrollable-wrapper > .dx-scrollable-container > .dx-scrollable-content > ul > li > .dx-treeview-node-container > li > .dx-widget').first().click();
  169 |     logger.info('אוגדה 1 נלחצה');
  170 |     await this.page.waitForTimeout(2500);
  171 |     await this.end1.scrollIntoViewIfNeeded();  // הגלילה כדי לוודא שהאלמנט גלוי
  172 |     await this.end1.click({ force: true });
  173 |     await this.page.waitForTimeout(2500);
  174 |   
  175 |     await this.end3.scrollIntoViewIfNeeded();  // הגלילה כדי לוודא שהאלמנט גלוי
  176 |     await this.end3.click({ force: true });
  177 |     await this.page.waitForTimeout(2500);
  178 |     await this.final.scrollIntoViewIfNeeded();  // הגלילה כדי לוודא שהאלמנט גלוי
  179 |     await this.final.click({ force: true });
  180 |     await this.page.waitForTimeout(2500);
  181 |     await this.calculate.click();
  182 |     await this.show.click();
  183 |     await this.f1.waitFor({ state: 'visible' });
  184 |     await this.f1.click();
  185 |     await this.f2.waitFor({ state: 'visible' });
  186 |     await this.f2.click();
  187 |     await this.f4.waitFor({ state: 'visible' });
  188 |     await this.f4.click();
  189 |     await this.show1.waitFor({ state: 'visible' });
  190 |     await this.show1.click();
  191 |   }
  192 |   async six() {
  193 |
  194 |  await this.all.nth(1).click()
> 195 |  await expect(this.must).toBeVisible()
      |                          ^ Error: expect(locator).toBeVisible()
  196 |
  197 |
  198 | }}
  199 | // .click();
```