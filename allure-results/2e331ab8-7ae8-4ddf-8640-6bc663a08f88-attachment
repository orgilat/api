# Test info

- Name: u,תFbffעעfsfsfsffffעfzzfffתvvvcccccדכדכזהזכccccת
- Location: C:\Users\User\Documents\k6try\tests\api.spec.ts:257:12

# Error details

```
Error: expect(locator).toHaveURL(expected)

Locator: locator(':root')
Expected string: "https://www.survey.co.il/pms/MMDANEW/sm.asp?action=datalake1"
Received string: ""
Call log:
  - expect.toHaveURL with timeout 190000ms
  - waiting for locator(':root')

    at Page.<anonymous> (C:\Users\User\Documents\k6try\pages\FlowPage.ts:512:29)
```

# Test source

```ts
  412 |    await expect(this.must4).toBeVisible()
  413 |    // קולט את כל הלייבלים שבתוך הטופס
  414 |     const labels = this.page.locator("//form[@name='sm_precalcrules']//label");
  415 |     const count1 = await labels.count();
  416 |     expect(count1).toBe(5);
  417 | }
  418 |
  419 | async eleven13() {
  420 |    await this.all.nth(16).click()
  421 |    await expect(this.must3).toContainText("הגדרת כללים לחוקות חישוב ואוכלוסיות למודל חישוב")
  422 |    await expect(this.submitButton).toBeVisible()
  423 |    // מאתר את הטבלה הראשונה עם cellpadding='0'
  424 |    const table = this.page.locator("(//table[@cellpadding='0'])");
  425 |
  426 | // סופר את מספר השורות
  427 | const rowCount = await table.count();
  428 |
  429 | // בודק שיש בדיוק 2
  430 | expect(rowCount).toBe(2);
  431 |
  432 | }
  433 |
  434 | async eleven14() {
  435 |    await this.all.nth(17).click()
  436 |    await expect(this.must3).toContainText("רשימת שדות עבור המאגר: מאגר עדכני")
  437 |   
  438 |    // מאתר את הטבלה הראשונה עם cellpadding='0'
  439 |     const table2 = this.page.locator(".mtableedit-table");
  440 |    const table = this.page.locator("(//input[@type='button'])");
  441 | const table3 = this.page.locator("input[value='הוסף שדה חדש']");
  442 |  await expect(table2).toBeVisible()
  443 |    await expect(table3).toBeVisible()
  444 | // סופר את מספר השורות
  445 | const rowCount = await table.count();
  446 |
  447 | // בודק שיש בדיוק 2
  448 | expect(rowCount).toBe(15);
  449 |
  450 | }
  451 |
  452 | async eleven15() {
  453 |   
  454 |   await this.all.nth(18).click();
  455 |   await expect(this.page).toHaveURL("https://www.survey.co.il/pms/MMDANEW/sm.asp");
  456 | }
  457 | async eleven16() {
  458 |   await this.all.nth(19).click();
  459 |  await expect(this.must3).toContainText("יצוא מצגות לקבוצות משתמשים במרוכז")
  460 |   const elements = await this.page.locator("(//div[@class='BodyOut-continar']//td)");
  461 |   const count = await elements.count();
  462 |   expect(count).toBe(4);
  463 |   
  464 | }
  465 | async eleven17() {
  466 |   await this.all.nth(20).click();
  467 |
  468 |    // 1. קליטת שדה חיפוש (input[type='search'])
  469 |   const searchInput = this.page.locator("input[type='search']");
  470 |   await expect(searchInput).toHaveCount(1); // ודא שיש בדיוק אחד
  471 |
  472 |   // 2. קליטת כפתור בתוך השורה הראשונה של הטבלה
  473 |   const firstRowButton = this.page.locator("(//table[@id='mailTable']//tr)[1]");
  474 |   await expect(firstRowButton).toHaveCount(1); // ודא שקיים כפתור אחד בשורה הראשונה
  475 |
  476 |   // 3. קליטת div של מידע - dt-info
  477 |   const dtInfo = this.page.locator("div.dt-info");
  478 |   await expect(dtInfo).toHaveCount(1); // ודא שיש div אחד עם info
  479 |
  480 |   // 4. ודא שסה"כ 4 כפתורים קיימים (לדוגמה אם אתה מתכוון לכמות כללית)
  481 |   const allButtons = this.page.locator("input[type='button']");
  482 |   await expect(allButtons).toHaveCount(1); // ודא שיש 4 כפתורי input בעמוד
  483 |   
  484 | }
  485 |
  486 | async eleven18() {
  487 |   await this.all.nth(21).click();
  488 |   await expect(this.must3).toContainText("ערוך מאפייני קבצי עובד")
  489 |   const allButtons = this.page.locator("//a[normalize-space(text())='ערוך רשימת מאפיינים']");
  490 |   await allButtons.click()
  491 |   await expect(this.page).toHaveURL("https://www.survey.co.il/pms/MMDANEW/interface.asp?ipagename=employeefilesprop");
  492 |   
  493 | }
  494 |
  495 | async eleven19() {
  496 |   await this.all.nth(22).click();
  497 |   const allButtons = this.page.locator("(//input[@class='btns'])");
  498 |   const count = await allButtons.count();
  499 |   expect(count).toBe(2);
  500 | }
  501 |
  502 | async eleven20() {
  503 |   await this.all.nth(23).click();
  504 |   await expect(this.page).toHaveURL("https://www.survey.co.il/pms/MMDANEW/sm.asp");
  505 | }
  506 | async eleven21() {
  507 |   await this.all.nth(24).click();
  508 |
  509 |     this.page.once('dialog', async dialog => {
  510 |     const message = dialog.message();
  511 |     expect(message).toBe("MMDA Datalake1  - הופעל");  // בדיקת תוכן הפופ-אפ
> 512 |     await expect(this.page).toHaveURL("https://www.survey.co.il/pms/MMDANEW/sm.asp?action=datalake1");
      |                             ^ Error: expect(locator).toHaveURL(expected)
  513 |   });
  514 | }
  515 | async eleven22() {
  516 |   await this.all.nth(25).click();
  517 |
  518 |     this.page.once('dialog', async dialog => {
  519 |     const message = dialog.message();
  520 |     expect(message).toBe("MMDA Datalake2 -  הופעל"); 
  521 |     await expect(this.page).toHaveURL("https://www.survey.co.il/pms/MMDANEW/sm.asp?action=datalake1");
  522 |   });
  523 | }
  524 |
  525 | async eleven23() {
  526 |   this.page.once('dialog', async dialog => {
  527 |     const message = dialog.message();
  528 |     expect(message).toBe("MMDA Datalake3 - הופעל");
  529 |   
  530 |   });
  531 |
  532 |   await this.all.nth(26).click(); // הלחיצה באה אחרי ה-once
  533 | }
  534 |
  535 |
  536 |
  537 |
  538 |
  539 |
  540 |
  541 |
  542 |
  543 |
  544 |
  545 |
  546 |
  547 |
  548 |
  549 |
  550 |
  551 |
  552 |
  553 |
  554 |
  555 |
  556 |
  557 |
  558 |
  559 |
  560 |
  561 |
  562 |
  563 |
  564 |  async ele() {
  565 |   await this.all.nth(5).click();
  566 |   await expect(this.must3).toContainText("כללי השתתפות ");
  567 |   const screenshotPath = path.resolve('C:\\Users\\User\\Documents\\k6try\\screenshots\\ele_actual.png');
  568 |   await this.page.screenshot({ path: screenshotPath, clip: { x: 0, y: 0, width: await this.page.evaluate(() => window.innerWidth), height: 1000 } });
  569 |
  570 |   // טען את תמונת ה-expected הקיימת
  571 |   const expectedPath = path.resolve('C:\\Users\\User\\Documents\\k6try\\screenshots\\ele.png');
  572 |   const expectedImage = PNG.sync.read(fs.readFileSync(expectedPath));
  573 |   const actualImage = PNG.sync.read(fs.readFileSync(screenshotPath));
  574 |
  575 |   const { width, height } = expectedImage;
  576 |   const diff = new PNG({ width, height });
  577 |
  578 |   // השווה בין התמונות
  579 |   const diffPixels = pixelmatch(expectedImage.data, actualImage.data, diff.data, width, height, { threshold: 0.1 });
  580 |
  581 |   // בדוק שאין הבדל (תפסיק אם יש הבדל)
  582 |   expect(diffPixels, `יש הבדל של ${diffPixels} פיקסלים בין התמונה הצפויה לפועלית`).toBe(0);
  583 | };
  584 | async compareScreenshots(start: number, end: number) {
  585 |   for (let i = start; i <= end; i++) {
  586 |     await this.all.nth(i).click();
  587 |
  588 |     const screenshotPath = path.resolve(`C:\\Users\\User\\Documents\\k6try\\screenshots\\twohalve_actual_${i}.png`);
  589 |     const expectedPath = path.resolve(`C:\\Users\\User\\Documents\\k6try\\screenshots\\twohalve_${i}.png`);
  590 |
  591 |     const width = await this.page.evaluate(() => window.innerWidth);
  592 |     const height = await this.page.evaluate(() => window.innerHeight);
  593 |     
  594 |     
  595 |     await this.page.screenshot({ path: screenshotPath, clip: { x: 0, y: 0, width, height } });
  596 |
  597 |     const expectedImage = PNG.sync.read(fs.readFileSync(expectedPath));
  598 |     const actualImage = PNG.sync.read(fs.readFileSync(screenshotPath));
  599 |
  600 |     const { width: w, height: h } = expectedImage;
  601 |     const diff = new PNG({ width: w, height: h });
  602 |
  603 |     const diffPixels = pixelmatch(expectedImage.data, actualImage.data, diff.data, w, h, { threshold: 0.1 });
  604 |
  605 |     const TOLERANCE = 100;
  606 |
  607 |     expect(diffPixels, `יש הבדל של ${diffPixels} פיקסלים בין התמונה הצפויה לפועלית במסך מספר ${i}`).toBeLessThanOrEqual(TOLERANCE);
  608 |
  609 |
  610 |     await this.page.goBack();
  611 |   }
  612 | }
```